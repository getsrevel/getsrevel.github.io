<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Teknologi :: Getsrevel</title><link>https://getsrevel.github.io/tech/index.html</link><description>Eksempler med teknologier vi arbejder med i programmering.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 05 Sep 2020 10:45:25 +0200</lastBuildDate><atom:link href="https://getsrevel.github.io/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Html</title><link>https://getsrevel.github.io/tech/html/index.html</link><pubDate>Mon, 11 Nov 2019 21:41:09 +0100</pubDate><guid>https://getsrevel.github.io/tech/html/index.html</guid><description>HTML er et opmærkningssprog, der bruges til at kommunikere strukturen af indholdet i et dokument til en browser.
Her er et eksempel på en html struktur.
&lt;!DOCTYPE html> &lt;html lang="en"> &lt;head> &lt;meta charset="UTF-8" /> &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /> &lt;title>Titlen på dokumentet&lt;/title> &lt;/head> &lt;body> Indhold på siden &lt;/body> &lt;/html>HTML elementer Når du skriver dit indhold benyttes en række forskellige tags, til at angive hvordan de forskellige dele (HTML elementer) af dokumentet skal fortolkes.</description></item><item><title>Css</title><link>https://getsrevel.github.io/tech/css/index.html</link><pubDate>Mon, 11 Nov 2019 21:41:14 +0100</pubDate><guid>https://getsrevel.github.io/tech/css/index.html</guid><description>HTML bruges til at opbygge den semantiske struktur af et dokument. Dette har ikke nogen direkte kobling til det visuelle udtryk.
Når vi skal styre udseendet på en webside bruges i stedet Cascading Style Sheets (CSS).
CSS introduktion CSS er opbygget af en række regler, der angiver hvordan et eller flere HTML elementer skal vises.
SELECTOR_ONE, SELECTOR_TWO { PROPERTY_ONE : VALUE_ONE; PROERTY_TWO : VALUE_TWO; }En regel består altså af</description></item><item><title>Unity</title><link>https://getsrevel.github.io/tech/unity/index.html</link><pubDate>Sat, 05 Sep 2020 10:45:25 +0200</pubDate><guid>https://getsrevel.github.io/tech/unity/index.html</guid><description>Noter og eksempler med Unity.</description></item><item><title>Arduino</title><link>https://getsrevel.github.io/tech/arduino/index.html</link><pubDate>Tue, 31 Mar 2020 16:59:02 +0200</pubDate><guid>https://getsrevel.github.io/tech/arduino/index.html</guid><description>Eksempler med Arduino.</description></item><item><title>C#</title><link>https://getsrevel.github.io/tech/c-sharp/index.html</link><pubDate>Fri, 20 Mar 2020 14:28:49 +0100</pubDate><guid>https://getsrevel.github.io/tech/c-sharp/index.html</guid><description>Noter og eksempler med C#.</description></item><item><title>React</title><link>https://getsrevel.github.io/tech/react/index.html</link><pubDate>Tue, 17 Mar 2020 22:00:26 +0100</pubDate><guid>https://getsrevel.github.io/tech/react/index.html</guid><description>Eksempler med React.</description></item><item><title>Chart.js</title><link>https://getsrevel.github.io/tech/chartjs/index.html</link><pubDate>Wed, 05 Feb 2020 11:08:49 +0100</pubDate><guid>https://getsrevel.github.io/tech/chartjs/index.html</guid><description>Hvis man gerne vil have tegnet en graf over noget data der er opsamlet, f.eks. fra en sensor, kan det være nyttigt at benytte et bibliotek af funktioner, som kan klare tegnearbejdet, så man ikke selv skal programmere det hele fra bunden.
Chart.js er et eksempel på sådan et bibliotek, der kan bruges til at få en graf frem på en hjemmeside.
Eksempel I dette eksempel vises hvordan man kan indsætte en graf med to datasæt.</description></item><item><title>Firebase</title><link>https://getsrevel.github.io/tech/firebase/index.html</link><pubDate>Tue, 28 Jan 2020 10:46:51 +0100</pubDate><guid>https://getsrevel.github.io/tech/firebase/index.html</guid><description>Eksempler med Firebase.</description></item><item><title>Regex</title><link>https://getsrevel.github.io/tech/regex/index.html</link><pubDate>Tue, 21 Jan 2020 22:24:07 +0100</pubDate><guid>https://getsrevel.github.io/tech/regex/index.html</guid><description>Her er en stump tekst som kunne være et eksempel på noget input, hvor vi gerne vil finde alle telefonnumre.
Here is my number 123-456-7893. Should you not be able to reach me there you can contact me at work (223)456-4305, or call my wife at 234.343.4521.Opgaven med at finde telefonnumre kan i dette tilfælde løses ved at at bruge denne regular expression eller regex.
[\(]\*\d{3}[)-\.]\d{3}[\.-]\d{4}Her er eksempel på hvordan det kan benyttes i javascript.</description></item><item><title>Mindstorms</title><link>https://getsrevel.github.io/tech/mindstorms/index.html</link><pubDate>Tue, 17 Dec 2019 08:46:29 +0100</pubDate><guid>https://getsrevel.github.io/tech/mindstorms/index.html</guid><description>En nem måde at komme i gang med at programmere til lego mindstorms EV3, er ved at bruge værktøjet Makecode. For at kunne benytte dette, kræves at din EV3 klods er opdateret til firmware version 1.10E eller nyere.
Programmering Du kan lave dit program ved hjælp af blok programmering, som du måske kender hvis du har arbejdet med Scratch, eller Applab.
Makecode udviklingsmiljøet i blokprogrammerings mode. Simulatoren ses i venstre side. Udviklingsmiljøet indeholder mulighed for at simulere dit program direkte i din browser uden at overføre det til en fysisk EV3 brik. Du kan se en grafisk visning af de enheder, der forventes at være tilsluttet til din EV3, på baggrund af indholdet af din kode. Du kan også køre dit program som en simulering, og se om det opfører sig som forventet, ved at manipulere de virtuelle input i browseren. Det kan dog være vanskeligt at simulere noget, hvor der er en fysisk kobling mellem input og output, som f.eks. en linjefølger, så du får også brug for at teste med en EV3 klods.</description></item><item><title>Hugo Static Site Generator</title><link>https://getsrevel.github.io/tech/hugo/index.html</link><pubDate>Tue, 12 Nov 2019 12:51:42 +0100</pubDate><guid>https://getsrevel.github.io/tech/hugo/index.html</guid><description>Kom igang med Hugo Hugo Hugo Quickstart Tilføj indhold Indholdet skrives ved hjælp af markdown, som bliver oversat til html.
Markdown - John Gruber Markdown Markdown syntax explained Markdown usage with grav theme Hugo shortcodes Diagrammer med Mermaid.js NoteLæs dokumentation af mermaid.js for mange flere detaljer.
Her er et eksempel på hvordan man kan lave et flowchart.
{{&lt; mermaid >}}graph TD;EDIT("opret/rediger/slet fil(er)") --> STAGE("udvælg ændringer") STAGE --> COMMIT("Commit i lokalt depot")COMMIT --> DO_PUSH{Klar til offentliggørelse?}DO_PUSH -->|Nej| EDITDO_PUSH -->|Ja| PUSH("Skub ændriger til 'remote'")PUSH --> EDIT{{&lt; / mermaid >}}Resultatet kommer til at se således ud.</description></item><item><title>Node.js</title><link>https://getsrevel.github.io/tech/node/index.html</link><pubDate>Mon, 11 Nov 2019 21:40:44 +0100</pubDate><guid>https://getsrevel.github.io/tech/node/index.html</guid><description>Eksempler med Node.js.</description></item><item><title>p5.js</title><link>https://getsrevel.github.io/tech/p5js/index.html</link><pubDate>Mon, 11 Nov 2019 21:40:44 +0100</pubDate><guid>https://getsrevel.github.io/tech/p5js/index.html</guid><description>Eksempler med p5.js.</description></item></channel></rss>