<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C# :: Getsrevel</title><link>https://getsrevel.github.io/tech/c-sharp/index.html</link><description>Noter og eksempler med C#.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 01 Nov 2021 14:08:28 +0100</lastBuildDate><atom:link href="https://getsrevel.github.io/tech/c-sharp/index.xml" rel="self" type="application/rss+xml"/><item><title>C# Intro</title><link>https://getsrevel.github.io/tech/c-sharp/c-sharp-intro/index.html</link><pubDate>Fri, 20 Mar 2020 14:29:07 +0100</pubDate><guid>https://getsrevel.github.io/tech/c-sharp/c-sharp-intro/index.html</guid><description>Setup For at kunne arbejde med C# kildekoden har vi brug for en god editor. Envidere får er der brug for en kompiler, så vi kan oversætte kildeteksten til et program der kan eksekveres på maskinen.
Code editor Der er flere muligheder at vælge mellem når man skal arbejde med C# kode. For ikke at bruge en masse tid på at lære et nyt miljø at kende, vælger vi at bruge Visual Studio Code, da den kan bruges både på Windows og Mac, og det er den samme editor vi har brugt til at arbjede med javascript.</description></item><item><title>Command Line Interface Arguments</title><link>https://getsrevel.github.io/tech/c-sharp/cli-args/index.html</link><pubDate>Mon, 01 Nov 2021 14:08:28 +0100</pubDate><guid>https://getsrevel.github.io/tech/c-sharp/cli-args/index.html</guid><description>Eksemplet viser hvordan man kan bruge argumenter fra kommandolinjen til at påvirke afviklingen af et program.
﻿using System; namespace cmd_args_demo { class Program { static void Main(string[] args) { ShowArguments(args); int multiplier = 7; if (args.Length > 0) { int.TryParse(args[0], out multiplier); } if (args.Length > 1) { int max = 10; int.TryParse(args[1], out max); } doStuff(multiplier, 10); } static void ShowArguments(string[] args) { for (int i = 0; i &lt; args.Length; i++) { string item = args[i]; Console.WriteLine($"argument {i} : {item}"); } } static void doStuff(int multiplier, int iterationCount) { for (int i = 1; i &lt;= iterationCount; i++) { int value = multiplier * i; Console.WriteLine($"{i} * {multiplier} : {value}"); } } } }Materiale How to convert a string to a number Int32.TryParse Method</description></item><item><title>Temperature Assessment</title><link>https://getsrevel.github.io/tech/c-sharp/temperature-assessment/index.html</link><pubDate>Mon, 11 Oct 2021 11:14:03 +0200</pubDate><guid>https://getsrevel.github.io/tech/c-sharp/temperature-assessment/index.html</guid><description>Eksemplet viser hvordan man kan bede en bruger om input, og bruge det til at vurdere temperaturen. NB! Temperaturen er i grader celcius.
﻿using System; namespace temperature_assessment { class Program { private InputHandler inputHandler; private TemperatureAssessor temperatureAssessor; public Program(InputHandler ih, TemperatureAssessor ta) { this.inputHandler = ih; this.temperatureAssessor = ta; } public void Run() { do { double temperature = inputHandler.PromptForNumber("Hvad er temperaturen i grader celsius?"); string result = temperatureAssessor.EvaluateTemperature(temperature); Console.WriteLine(result); } while (inputHandler.Confirm("Vil du prøve igen?")); } static void Main(string[] args) { Console.WriteLine("Temperatur vurdering"); InputHandler inputHandler = new InputHandler(); TemperatureAssessor temperatureAssessor = new TemperatureAssessor(); Program myProgram = new Program(inputHandler, temperatureAssessor); myProgram.Run(); } } class TemperatureAssessor { public string EvaluateTemperature(double temperature) { if (temperature &lt;= 10) return "For koldt til at stå op - bliv i sengen"; if (temperature &lt;= 15) return "For koldt til at arbejde - bliv hjemme"; if (temperature &lt;= 20) return "OK temperatur til en tur i skoven"; if (temperature &lt;= 22) return "Perfekt pausetemperatur"; return "For varmt til at arbejde - tag til stranden"; } } class InputHandler { public double PromptForNumber(string message) { double value; bool isSuccess; do { string line = Prompt($"{message} "); isSuccess = Double.TryParse(line, out value); if (!isSuccess) { Console.Error.WriteLine("Ugyldigt input: Du skal skrive et tal."); } } while (!isSuccess); return value; } public bool Confirm(string question) { string confirm = "ja"; string reject = "nej"; string response; bool isValidResponse; do { response = Prompt($"{question} [{confirm}/{reject}] "); isValidResponse = response.Equals(reject) || response.Equals(confirm); if (!isValidResponse) { Console.Error.WriteLine($"Ugyldigt input: Du skal svare enten '{confirm}' eller '{reject}'"); } } while (!isValidResponse); return response.Equals(confirm); } string Prompt(string message) { Console.Write($"{message} "); return Console.ReadLine(); } } }Materiale How to convert a string to a number Console.ReadLine Method Console.Write Method Console.WriteLine Method Console.Error Property Double.TryParse Method</description></item><item><title>Guessing Game</title><link>https://getsrevel.github.io/tech/c-sharp/guessing-game/index.html</link><pubDate>Sun, 26 Sep 2021 21:49:12 +0200</pubDate><guid>https://getsrevel.github.io/tech/c-sharp/guessing-game/index.html</guid><description>Eksemplet viser hvordan man kan lave et “spil”, der går ud på at gætte det hemmelige tal.
﻿using System; namespace guessing_game { class Program { static void Main(string[] args) { int min = 1; if (args.Length > 1) { if (!int.TryParse(args[0], out min)) { Console.Error.WriteLine("Invalid Argument: minimum must be an integer."); return; } } int max = 1000; if (args.Length > 0) { string maxStr = (args.Length > 1)? args[1]: args[0]; if (!int.TryParse(maxStr, out max)) { Console.Error.WriteLine("Invalid Argument: maximum must be an integer."); return; } } if (!(min &lt; max)) { Console.Error.WriteLine("Invalid Argument: minimum must be greater than maximum"); return; } GuessingGame game = new GuessingGame(min, max); do { game.play(); } while (game.wantsRematch()); } } class GuessingGame { private int min; private int max; public GuessingGame(int max) { this.min = 1; this.max = max; } public GuessingGame(int min, int max) { this.min = min; this.max = max; } public bool wantsRematch() { Console.Write("Prøv igen? (Y/n): "); string answer = Console.ReadLine(); bool isAfirmative = "y".Equals(answer.ToLower()) || "".Equals(answer); return isAfirmative; } public void play() { Random randomNumberGenerator = new Random(); int secretNumber = randomNumberGenerator.Next(min, max); Console.WriteLine($"Gæt et tal mellem {min} og {max}"); bool done = false; while (!done) { Console.Write("Skriv dit gæt: "); var guessLine = Console.ReadLine(); bool isValidInteger = int.TryParse(guessLine, out int guess); if (!isValidInteger) { Console.WriteLine("Dit gæt skal være et tal!"); continue; } bool isInValidRange = min &lt;= guess &amp;&amp; guess &lt;= max; if (!isInValidRange) { Console.WriteLine($"Dit gæt skal være melem {min} og {max}!"); continue; } if (guess == secretNumber) { Console.WriteLine($"Rigtigt! Flot gættet. Det hemmelige tal er {secretNumber}"); done = true; } else { if (guess > secretNumber) { Console.WriteLine("Dit gæt er for højt"); } if (guess &lt; secretNumber) { Console.WriteLine("Dit gæt er for lavt"); } Console.WriteLine("Gæt igen"); } } } } }Materiale How to convert a string to a number Random.Next Method Int32.TryParse Method</description></item></channel></rss>