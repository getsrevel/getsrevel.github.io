<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Conditions on Getsrevel</title><link>https://getsrevel.github.io/tags/conditions/</link><description>Recent content in Conditions on Getsrevel</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 17 Feb 2020 14:48:30 +0100</lastBuildDate><atom:link href="https://getsrevel.github.io/tags/conditions/index.xml" rel="self" type="application/rss+xml"/><item><title>Ball Bounce</title><link>https://getsrevel.github.io/tech/p5js/ball-bounce/</link><pubDate>Mon, 17 Feb 2020 14:48:30 +0100</pubDate><guid>https://getsrevel.github.io/tech/p5js/ball-bounce/</guid><description>I dette eksempel demonstreres hvordan man kan benytte forgreninger og boolske udtryk til at ændre bevægelsesretningen på en cirkel, så det minder om en bold, der hopper når den rammer siderne.
// Lav en variabel og kald den x // giv x værdien 200 let x = 200; // opret flere variabler let xSpeed = 5; let y = 200; let ySpeed = 3; let c; let cFill; // Definer en funktion der kan ændre fyld og stregfarve function changeColor() { c = color(random(255), random(255), random(255)); cFill = color(random(255), random(255), random(255)); strokeWeight(10); stroke(c); fill(cFill); } function setup() { createCanvas(windowWidth, windowHeight); const speedScale = 128 xSpeed = windowWidth / speedScale ySpeed = windowHeight / speedScale changeColor(); } function draw() { background(c); rect(0, 0, width, height); // opret variabler til radius og diameter let r = 60; let d = r * 2; // tegn en cirkel med centrum i (x, y) og diameter d circle(x, y, d); // hvis x er større end bredden af lærredet // så sæt xSpeed til -xSpeed let isPastRightSide = width &amp;lt; x + r if (isPastRightSide) { changeColor(); xSpeed = -xSpeed; } let isPastLeftSide = 0 &amp;gt; x - r if (isPastLeftSide) { changeColor(); xSpeed = -xSpeed; } let isBelowBottom = height &amp;lt; y + r let isAboveTop = 0 &amp;gt; y - r if (isBelowBottom || isAboveTop) { changeColor(); ySpeed = -ySpeed; } x = x + xSpeed; // samme som // y = y + ySpeed; y += ySpeed; } Demo Prøv det kørende eksempel</description></item></channel></rss>