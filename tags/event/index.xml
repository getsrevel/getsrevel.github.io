<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Event :: Tag :: Getsrevel</title><link>https://getsrevel.github.io/tags/event/index.html</link><description/><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 01 Nov 2021 13:10:24 +0100</lastBuildDate><atom:link href="https://getsrevel.github.io/tags/event/index.xml" rel="self" type="application/rss+xml"/><item><title>Circle Rain</title><link>https://getsrevel.github.io/tech/p5js/circle-rain/index.html</link><pubDate>Mon, 01 Nov 2021 13:10:24 +0100</pubDate><guid>https://getsrevel.github.io/tech/p5js/circle-rain/index.html</guid><description>Eksemplet tegner en mængde cirkler på skærmen, der falder mod bunder af skærmen som en slags regn. Der defineres en funktion der kan ændre cirklernes egenskaber: position og hastighed. Der benyttes arrays til at kan holde styr de mange cirklers individuelle egenskaber.
const ballCount = 100 let diameters = new Array(ballCount); let xPositions = new Array(ballCount); let yPositions = new Array(ballCount); let ySpeeds = new Array(ballCount); function setup() { createCanvas(windowWidth, windowHeight); reset(50) } function draw() { background(220); for (let i = 0; i &lt; ballCount; i++) { circle(xPositions[i], yPositions[i], diameters[i]) yPositions[i] += ySpeeds[i]; } } function reset(maxSize) { for (let i = 0; i &lt; ballCount; i++) { diameters[i] = random(0, maxSize); ySpeeds[i] = random(0.01, 10); xPositions[i] = random(0, width); yPositions[i] = random(0, height) - height; } } function mouseClicked() { const maxSize = map(mouseY, 0, height,0,200) reset(maxSize) }Demo Prøv det kørende eksempel</description></item><item><title>Input Events</title><link>https://getsrevel.github.io/tech/p5js/input-events/index.html</link><pubDate>Wed, 27 Oct 2021 20:12:51 +0200</pubDate><guid>https://getsrevel.github.io/tech/p5js/input-events/index.html</guid><description>Eksemplet viser, hvordan man kan benytte input events fra keyboard og mus til at ændre på figurens udseende.
let fillColor = 'black' let sizeMultiplier = 1 function setup() { createCanvas(windowWidth, windowHeight) rectMode(CENTER) } function draw() { background(220); text("Press 'r', 'b' or click mouse to change color", 40, 40) textSize(20) let xPos = mouseX let yPos = mouseY let shapeSize = 80 * sizeMultiplier fill(fillColor) if (keyIsPressed) { rect(xPos, yPos, shapeSize) } else { circle(xPos, yPos, shapeSize) } } function keyPressed() { console.log("pressed", key) if ('b' == key) { fillColor = 'blue' } if ('r' == key) { fillColor = 'red' } } function keyReleased() { console.log("released", key) sizeMultiplier = 1 } function mousePressed() { console.log("mouse pressed") fillColor = 'yellow' sizeMultiplier = 3 } function mouseReleased() { console.log("mouse released") fillColor = 'black' sizeMultiplier = 3 }Demo Prøv det kørende eksempel</description></item></channel></rss>