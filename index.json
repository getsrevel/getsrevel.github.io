[
{
	"uri": "https://getsrevel.github.io/tech/p5js/intro/",
	"title": "Intro",
	"tags": [],
	"description": "",
	"content": " P5js introduktion  p5js p5 code editor browserbaseret editor der ikke kræver installation. p5 reference er dokumentation af de mange funktioner i p5. Variabler i javascript bliver grundigt forklaret og bruger et metafor med en kasse, der måske kan hjælpe lidt på forståelsen. Variable scope forklaret ved et eksempel.  Tegn på skærmen Denne video forklarer de grundlæggende principper i computergrafik.\n   Dokumentation af alle tegne primitiver i p5.  Her nogle få udvalgte, der formentlig kan bruges til at løse opgaven.\n rect() line() ellipse() arc()  Her er nogle eksempler på hvordan de kan bruges i koden: en linie, et rektangel, en ellipse, et buestykke.\nline(x1, y1, x2, y2); rect(x, y, w, h); arc(x, y, w, h, start, stop);  Brug af farver Når du skal tegne kan du vælge egenskaber for din \u0026ldquo;pensel\u0026rdquo;. Dette gøres på inden du \u0026ldquo;maler\u0026rdquo;, på samme måde som med en rigtig pensel.\n stroke() vælger stregens farve. strokeWeight() vælger stregens tykkelse. fill() vælger fyldfarven. Denne har kun betydning for lukkede figurer som f.eks. firkanter og cirkler.  Du kan bruge color() til at oprette en farve, og gemme værdien i en variabel, så den nemt kan genbruges forskellige steder i programmet. Her er et eksempel:\nlet myColor = color(250, 142, 0) fill(myColor); circle(100, 150, 42);   Color Picker (google) kan bruges til at vælge en farve og se hvilke argumenter du skal give til color() funktionen. Color Picker - w3schools er en del af en længere forklaring om farver på hjemmesider og computergrafik.  "
},
{
	"uri": "https://getsrevel.github.io/tech/html/",
	"title": "Html",
	"tags": [],
	"description": "",
	"content": " HTML introduktion  HTML5 Tutorial Headings Paragraphs Lists Images figure figcaption  Video kursus (På dansk)  HTML Kursus  Quiz  HTML quiz  Opgave Lav et website i html der præsenterer dig selv og din yndlings kage:\n Der skal være 2 sider  En beskrivelse af dig selv der navngives \u0026ldquo;profil.html\u0026rdquo; En anden side med en mad opskrift \u0026ldquo;opskrift.html\u0026rdquo;  Begge sider skal have en titel Der skal være links så man kan navigere mellem de to sider  På profil siden\n Brug forskellige niveauer af overskrifter Lav mindst et afsnit med brødtekst (f.eks. En kort beskrivelse af dig selv) Indsæt et billede af dig selv  Giv det en figurtekst med dit navn   På siden med opskriften\n Lav overskrifter Indsæt et billede af kagen Lav en unummereret punktopstilling med ingredienser Lav en nummeret punktopstilling med fremgangsmåden Lav en henvisning (link) til kilden (hvor du fandt opskriften) Lav et link til \u0026ldquo;toppen\u0026rdquo; lokalt link på siden  "
},
{
	"uri": "https://getsrevel.github.io/tech/css/",
	"title": "Css",
	"tags": [],
	"description": "",
	"content": " CSS introduktion  CSS Tutorial Same Page Different Stylesheets CSS Syntax and Selectors Three Ways to Insert CSS CSS Box Model CSS Grid Layout Module  Quiz  CSS quiz  CSS Flexbox  A guide to flexbox  Spil  CSS Grid Garden Flexbox froggy  Eksempler  zebra stripes on a table Fancy table  Opgave Arbejd med styling af HTML elementer vha CSS i eksternt stylesheet\n Brug html struktur (index.html) Lav styling af siden ved hjælp af CSS i en ekstern fil (style.css)  "
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/canvas/",
	"title": "Canvas",
	"tags": [],
	"description": "",
	"content": " Dette eksempel viser hvordan man opretter et lærred, og tegner figure på skærmen. Der benyttes variabler og musemarkørens position til at styre hvor på skærmen der tegnes.\nfunction setup() { createCanvas(600, 800); } function draw() { background(220); fill(255); // variable declaration  let x; // variable assignment  x = mouseX; // declaration and assignment in one line  let y = mouseY; ellipse(x,y, 150); x = 200; ellipse(x, y, 50); fill(255, 0, 0); ellipse(width,height, 120); let cx = width /2; let cy = height / 2; ellipse(cx,cy, 50); }  Demo Prøv det kørende eksempel\n"
},
{
	"uri": "https://getsrevel.github.io/tech/firebase/firestore-client/",
	"title": "Firestore Client",
	"tags": [],
	"description": "",
	"content": " I dette eksempel forbindes der til Firestore fra en browser ved hjælp af javascript.\nVideoen viser en gennemgang af de fundamentale principper i Cloud Firestore.\nGetting Started With Cloud Firestore on the Web - Firecasts   Demo Hvis du følger videoen burde du ende op med et kørendene eksempel, der ser nogenlunde sådan ud.\n Hot dog status Save      \r\rKoden du ender op kommer til at ligne dette.\r\r\r// Your web app\u0026#39;s Firebase configuration var firebaseConfig = { apiKey: \u0026#34;AIzaSyAof7A2wpEylAFHsKWvqeJU8VkYN7G1VMI\u0026#34;, authDomain: \u0026#34;coldhawaiiweather.firebaseapp.com\u0026#34;, databaseURL: \u0026#34;https://coldhawaiiweather.firebaseio.com\u0026#34;, projectId: \u0026#34;coldhawaiiweather\u0026#34;, storageBucket: \u0026#34;coldhawaiiweather.appspot.com\u0026#34;, messagingSenderId: \u0026#34;645018619046\u0026#34;, appId: \u0026#34;1:645018619046:web:2ae11bff4009e1e965f867\u0026#34;, measurementId: \u0026#34;G-61E1DX0Z3Q\u0026#34; }; // Initialize Firebase firebase.initializeApp(firebaseConfig); firebase.analytics(); const firestore = firebase.firestore(); const docRef = firestore.doc(\u0026#34;samples/sandwichData\u0026#34;); const outputHeader = document.querySelector(\u0026#34;#hotdogOutPut\u0026#34;); const inputTextField = document.querySelector(\u0026#34;#latestHotdogStatus\u0026#34;); const saveButton = document.querySelector(\u0026#34;#saveButton\u0026#34;); saveButton.addEventListener(\u0026#34;click\u0026#34;, e =\u0026gt; { const textToSave = inputTextField.value; console.log(\u0026#34;save clicked \u0026#34; + textToSave); docRef .set({ hotdogStatus: textToSave }) .then(() =\u0026gt; { console.log(\u0026#34;saved!\u0026#34;); }) .catch(error =\u0026gt; { console.log(\u0026#34;got an error: \u0026#34;, error); }); }); thingToDoWhithDocumentData = doc =\u0026gt; { if (doc \u0026amp;\u0026amp; doc.exists) { const myData = doc.data(); console.log(\u0026#34;Got snapshot doc: \u0026#34;, doc); outputHeader.innerText = \u0026#34;Hot dog Status: \u0026#34; + myData.hotdogStatus; } }; getRealtimeUpdates = () =\u0026gt; { docRef.onSnapshot( { includeMetadataChanges: true }, thingToDoWhithDocumentData ); }; getRealtimeUpdates();  \r Du kan også se demonstrationen på en separat side.\nMateriale  Clouc Firestore dokumentation. Getting Started With Cloud Firestore on the Web - Firecasts  Firecasts firebase intro   "
},
{
	"uri": "https://getsrevel.github.io/tech/firebase/firestore-client/demo/",
	"title": "Firestore web client demo",
	"tags": [],
	"description": "",
	"content": "Hot dog status Save\n    "
},
{
	"uri": "https://getsrevel.github.io/tech/firebase/",
	"title": "Firebase",
	"tags": [],
	"description": "",
	"content": " Firebase Lidt eksempler med Firebase.\n"
},
{
	"uri": "https://getsrevel.github.io/tech/firebase/firestore-upload/",
	"title": "Firestore Node Upload",
	"tags": [],
	"description": "",
	"content": " I dette eksempel forbindes der til Firestore via Node.js. Dvs. koden der skal afvikles på serveren kan skrives i javascript, og vi kan derfor genbruge viden om syntaks fra arbejdet med p5js.\nOpsætning af Node projekt For at kunne arbejde med firestore fra node.js, skal der laves en pakke / projekt at arbejde i. Dette kan gøres ved at lave en top mappe og køre denne kommando for at generere en package.json fil.\nnpm init Man bliver så bedt om at svare på en række spørgsmål, og ender med en struktur der ser nogenlunde sådan ud:\n{\r\u0026#34;name\u0026#34;: \u0026#34;firestore-demo\u0026#34;,\r\u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;,\r\u0026#34;description\u0026#34;: \u0026#34;\u0026#34;,\r\u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;,\r\u0026#34;scripts\u0026#34;: {\r\u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;\r},\r\u0026#34;author\u0026#34;: \u0026#34;\u0026#34;,\r\u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;\r} For at kunne benytte Firebase SDK skal vi have dette installeret, hvilket kan klares med kommandoen.\nnpm install firebase-admin --save Dette tilføjet Firebase som afhængighed og package.json ser nu nogenlunde således ud.\n{\r\u0026#34;name\u0026#34;: \u0026#34;firestore-demo\u0026#34;,\r\u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;,\r\u0026#34;description\u0026#34;: \u0026#34;\u0026#34;,\r\u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;,\r\u0026#34;scripts\u0026#34;: {\r\u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;\r},\r\u0026#34;author\u0026#34;: \u0026#34;\u0026#34;,\r\u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;,\r\u0026#34;dependencies\u0026#34;: {\r\u0026#34;@google-cloud/firestore\u0026#34;: \u0026#34;^3.4.1\u0026#34;,\r\u0026#34;firebase-admin\u0026#34;: \u0026#34;^8.9.1\u0026#34;\r}\r} Som det ses er der nu tilføjet afhængigheder til firebase pakkerne. De nærmere detaljer kan findes i denne guide.\nDette er et eksempel på en hvordan man kan lave et lille program der indsætter en stump data i firestore.\nFirestore upload eksempel // Add the Firebase Admin SDK to Your Server\rlet admin = require(\u0026#34;firebase-admin\u0026#34;);\r// Import crecential for the service account\rlet serviceAccount = require(\u0026#34;./serviceAccountKey.json\u0026#34;);\r// Initialize the default app\rlet app = admin.initializeApp({\rcredential: admin.credential.cert(serviceAccount),\rdatabaseURL: \u0026#34;https://coldhawaiiweather.firebaseio.com\u0026#34;\r});\rlet db = admin.firestore();\r// Generate some fake weather data\rconst weatherData = {\rtime: Date.now(),\rwindSpeed: getRandomInt(15, 3),\rwindDir: getRandomInt(0, 359),\r};\r// Add document to Firestore\rlet addDoc = db.collection(\u0026#34;weather\u0026#34;).add(weatherData);\r// Helper - Generates random integer values function getRandomInt(max, min) {\rconst diff = max - min;\rreturn Math.floor(Math.random() * Math.floor(diff) + min);\r}  Der skal bruges en såkaldt Service Account, for at kunne forbindes fra node til firebase. Guiden forklarer hvad du skal gøre for at oprette en service account til dit firebase projekt. Disse oplysninger er private, så vær opmærksom på ikke at holde dem for dig selv. For eksemplet virker skal oplysningerne om din Service Account oprettes i file serviceAccountKey.json.\nHåndtering af private nøgler For at undgå at sprede disse oplysninger er det en god ide at tilføje denne fil til listen over filer der skal ignoreres af git. Dvs. at din .gitignore fil kunne se således ud.\n# ignore packages downloaded from npm\rnode_modules/\r# avoid storing firebase login credentials\rserviceAccountKey.json Hvis javascript eksemplet gemmes i en fil med navnet firebase-upload-demo.js, kan programmet køres med kommandoen\nnode firebase-upload-demo.js Materiale  Clouc Firestore dokumentation. Add the Firebase Admin SDK to Your Server guide til at komme i gang med firebase på en server. Cloud Firestore quickstart guide til at komme i gang med firestore. gitignore dokumentation.  "
},
{
	"uri": "https://getsrevel.github.io/tech/node/web-scraping/",
	"title": "Web Scraping",
	"tags": [],
	"description": "",
	"content": " Scraper eksempel Dette er et eksempel på en scraper der finder alle links på en side, og skriver deres URL ud i konsollen.\nconst cheerio = require(\u0026#34;cheerio\u0026#34;);\rconst axios = require(\u0026#34;axios\u0026#34;);\r// Swap this for the url you want to scrape\rconst url =\r\u0026#34;https://en.wikipedia.org/wiki/List_of_Presidents_of_the_United_States\u0026#34;;\raxios\r.get(url)\r.then(response =\u0026gt; {\rlet $ = cheerio.load(response.data);\r$(\u0026#34;a\u0026#34;).each(function(i, e) {\rlet links = $(e).attr(\u0026#34;href\u0026#34;);\rconsole.log(links);\r});\r})\r.catch(function(e) {\rconsole.log(e);\r});  For at køre eksemplet skal der installeres nogle biblioteker fra npm.\nFørst skal der lavet et projekt så node kan finde ud af at køre din fil, og har en package.json fil til at holde styr på projektet og afhængigheder af biblioteksmoduler.\nnpm init -y Dernæst har du mulighed for at installere disse afhængigheder.\nnpm --save install axios\rnpm --save install cheerio Nu kan du køre eksemplet med denne kommando:\nnode simple-scraper.js Her er et eksempel med samme funktionalitet, men hvor der bruges async/await syntaks i stedet for promise.then().\n// import the library modules you installed from npm\rconst cheerio = require(\u0026#34;cheerio\u0026#34;);\rconst axios = require(\u0026#34;axios\u0026#34;);\r// Define the scraping algorithm\rasync function runScraper(url) {\rtry {\rconst html = (await axios.get(url)).data;\rconst $ = cheerio.load(html);\r$(\u0026#34;a\u0026#34;).each(function(i, e) {\rconst url = $(e).attr(\u0026#34;href\u0026#34;);\rconsole.log(url);\r});\r} catch (error) {\rconsole.log(\u0026#34;error: \u0026#34; + error);\r}\r}\r// Swap this for the url you want to scrape\rconst url =\r\u0026#34;https://en.wikipedia.org/wiki/List_of_Presidents_of_the_United_States\u0026#34;;\r// run the scraper by calling the function\rrunScraper(url);  Tutorial Denne tutorial giver et eksempel på hvordan man kan hente en side med links til amerikanske præsidenter fra wikipedia, og ved at følge disse links hente de enkelte præsidenters navne og fødselsdage.\n The Ultimate Guide to Web Scraping with Node.js  Websider der bliver brugt i eksemplet:\nListen af præsidenter og deres links hentes fra\n List of presidents of the United States  Dette er et eksempel på en side der beskriver en specifik præsident.\n George Washington  NPM modules Her er en række biblioteker der kan bruges til at lave web scraping.\n Axios request-promise Cheerio html parsing on the server. Puppeteer Puppeteer source  Javascript articles  Promise basics Async/await The Pitfalls of Async/Await in Array Loops Why Axios Is Better Than Node-Fetch  "
},
{
	"uri": "https://getsrevel.github.io/",
	"title": "Getsrevel",
	"tags": [],
	"description": "",
	"content": " Getsrevel Velkommen til mit website der primært er løse noter om programmering og andet \u0026ldquo;work in progress\u0026rdquo;.\n"
},
{
	"uri": "https://getsrevel.github.io/project/weather-station/",
	"title": "Weather Station",
	"tags": [],
	"description": "",
	"content": " Opgave: Mobil vejrstation Lav et it system der gør det muligt at se data fra en vejrstatation på en nem og overskuelig måde. Løsningen skal virke på mobil, tablet og computeren.\n Opgaven løses i grupper. Der skal laves en kravspecifikation. I skal bruge et projetstyrings værktøj til at styre jeres opgaver, f.eks. Trello eller Milanote. \u0026ldquo;Oversæt\u0026rdquo; krav fra kravspecifikationen til konkrete opgaver på jeres trello board. Løsningen skal designes så den ikke belaster vejrstationen unødigt når den bruges samtidig af mange brugere, f.eks. ved at sende unødigt mange forespørgsler. Design og implementation skal dokumenteres. Brug git og github til at samarbejde om koden.  Som kilde til vejrdata kan f.eks. benyttes vejrobservationer fra Hanstholm havns vejrstation. Som datalager kan f.eks. benyttes Firebase.\nMateriale  Kravspecifikation - informatik bog Hanstholm havns vejrstation vejrobservationer hvert 10. minut. Trello kanban board til projektstyring Milanote projektstyring og idegenerering  Milanote plans \u0026amp; pricing   Firebase  Firebase introduction docs Hotdog status - Firebase firestore tutorial Firecasts firebase intro  Uploading to firestore\n Cloud Firestore: Node.js Client Client API til firestore. Add the Firebase Admin SDK to Your Server  Hotdog status - Firebase tutorial   Firecasts firebase intro   "
},
{
	"uri": "https://getsrevel.github.io/tech/mindstorms/",
	"title": "Mindstorms",
	"tags": [],
	"description": "",
	"content": " En nem måde at komme i gang med at programmere til lego mindstorms EV3, er ved at bruge værktøjet Makecode. For at kunne benytte dette, kræves at din EV3 klods er opdateret til firmware version 1.10E eller nyere.\nProgrammering Du kan lave dit program ved hjælp af blok programmering, som du måske kender hvis du har arbejdet med Scratch, eller Applab.\n  Makecode udviklingsmiljøet i blokprogrammerings mode. Simulatoren ses i venstre side.   Udviklingsmiljøet indeholder mulighed for at simulere dit program direkte i din browser uden at overføre det til en fysisk EV3 brik. Du kan se en grafisk visning af de enheder, der forventes at være tilsluttet til din EV3, på baggrund af indholdet af din kode. Du kan også køre dit program som en simulering, og se om det opfører sig som forventet, ved at manipulere de virtuelle input i browseren. Det kan dog være vanskeligt at simulere noget hvor der er en fysisk kobling mellem input og output, som f.eks. en liniefølger, så du får også brug for at test med en EV3 klods.\nSom det også er tilfældet med Applab, kan du vælge at skrive dit program i javascript. Her er et eksempel på et program der starter og stopper en motor, afhængigt af om en knap er trykket ind.\nforever(function () { if (sensors.touch2.isPressed()) { motors.mediumC.run(50) } else { motors.mediumC.stop() } })  En af fordelene ved at bruge tekstbaseret kode som f.eks. javascript er, at du nemt kan klippe/klistre stumper af kode fra forskellige programmer, og sætte dem sammen til et nyt program.\nMateriale  Makecode editor til EV3. Fejlfinding  "
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/key-pressed-multi/",
	"title": "key press multi",
	"tags": [],
	"description": "",
	"content": " Her er et eksempel der viser hvordan man kan håndtere input fra flere taster på en gang.\nlet cx; let cy; let state = { up: false, down: false, left: false, right: false,  engine: false }; function setup() { createCanvas(400, 600); cx = width / 2; cy = height / 2; } function draw() { background(220); fill(\u0026#34;gray\u0026#34;); textSize(20); text(`Move using arrow keys and space`, 10, 30); // show  if (state.engine) { fill(\u0026#34;red\u0026#34;); } else { fill(\u0026#34;gray\u0026#34;); } strokeWeight(5); circle(cx, cy, 50); // update position  const step = 1; if (state.left) { cx -= step; } if (state.right) { cx += step; }  if (state.up) { cy -= step; } if (state.down) { cy += step; } } function keyPressed() { if (key === \u0026#34; \u0026#34;) { state.engine = true; } if (keyCode === LEFT_ARROW) { state.left = true; } if (keyCode === RIGHT_ARROW) { state.right = true; } if (keyCode === UP_ARROW) { state.up = true; } if (keyCode === DOWN_ARROW) { state.down = true; } } function keyReleased() { if (key === \u0026#34; \u0026#34;) { state.engine = false; } if (keyCode === LEFT_ARROW) { state.left = false; } if (keyCode === RIGHT_ARROW) { state.right = false; }  if (keyCode === UP_ARROW) { state.up = false; } if (keyCode === DOWN_ARROW) { state.down = false; } }  Bemærk at både keyPressed() og keyReleased() hændelser håndteres for alle gyldige input.\nStatus for de enkelte input registreres i variablen state, som er en klasse med de nødvendige attributter.\nI eksemplet er håndteringen af højre piletast fremhævet.\nDenne måde at håndtere input bevirker at figuren kan bevæges uafhængigt af repeat rate i keyboard indstillingerne.\n  Eksempel på timing af keyboard input fra 2 piletaster   Demo Prøv det kørende eksempel\n"
},
{
	"uri": "https://getsrevel.github.io/project/asteroid/",
	"title": "Asteroids Game",
	"tags": [],
	"description": "",
	"content": " Opgave: Lav et \u0026ldquo;Asteroids\u0026rdquo; spil  Opgaven skal laves i grupper. I skal lave en kravspecifikation I skal lave implementationen i p5js I skal bruge Trello til at styre jeres opgaver. \u0026ldquo;Oversæt\u0026rdquo; krav til jeres spil fra kravspecifikationen til opgaver på jeres trello board. Brug git og github til at samarbejde om koden.  Materiale  p5js p5 code editor browserbaseret editor der ikke kræver installation. p5 reference er dokumentation af de mange funktioner i p5. Git  Javascript emner For at kunne lave spillet bliver det formentlig nyttigt at kende til disse koncepter\n Betingelser Logiske operatorer Løkker Funktioner Objekter Arrays  Coding Challenge #46.1: Asteroids with p5.js - Part 1   Coding Challenge #46.2: Asteroids with p5.js - Part 2   3.2: Trigonometry and Polar Coordinates - The Nature of Code   "
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/key-is-pressed/",
	"title": "Keyboard",
	"tags": [],
	"description": "",
	"content": "  Keycode.info  I dette eksempel bruges keyIsPressed til at ændre fyldfarven på figuren.\nfunction setup() {\rlet canvas = createCanvas(400, 400);\rcanvas.parent(\u0026#34;sketch-holder\u0026#34;);\r}\rfunction draw() {\rbackground(100, 0, 0);\rfill(\u0026#34;red\u0026#34;);\rcircle(50, 150, 50);\rcircle(width - 50, 50, 50);\rif (keyIsPressed === true) {\rfill(0);\r} else {\rfill(255);\r}\r rect(25, 25, 50, 50);\r}   canvas { display: inline; }  Demo Prøv det kørende eksempel på en selvstændig side.\nDemo Prøv at trykke på en vilkårlig tast på tastaturet.\n     "
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/asteroids-game-demo/",
	"title": "asteroids demo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/fullscreen/",
	"title": "Fullscreen",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/fullscreen-demo/",
	"title": "fullscreen demo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/key-pressed-simple/",
	"title": "key pressed simple",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/multitouch/",
	"title": "multitouch",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/canvas/demo/",
	"title": "p5 canvas demo",
	"tags": [],
	"description": "",
	"content": " "
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/asteroids-game-demo/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/fullscreen-demo/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/key-is-pressed/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": "  "
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/key-pressed-multi/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": " "
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/key-pressed-simple/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/multitouch/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/my-demo/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/polar-loop/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/polar/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/tacospin/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/vector/demo/",
	"title": "p5 demo live",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/fullscreen/demo/",
	"title": "p5 fullscreen demo live",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/my-demo/",
	"title": "p5DemoPresentation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/polar/",
	"title": "polar",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/polar-loop/",
	"title": "polar loop",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/tacospin/",
	"title": "tacospin",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/vector/",
	"title": "vector",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/project/recursion/",
	"title": "Rekursion",
	"tags": [],
	"description": "",
	"content": " Intro Søg på recursion på google.\nFibonacci serie  Fibonacci sequence - Wikipedia   Efficient solution:\n Binet\u0026rsquo;s Fibonacci number formula  Towers of Hanoi   Denne gennemgang viser hvordan man kan bruge rekursion til at løse \u0026ldquo;Towers of Hanoi\u0026rdquo; spillet.\nHer er python kode fra videoen.\ndef move(f,t): print(\u0026#34;Flyt: {} ==\u0026gt; {}!\u0026#34;.format(f,t)) def moveVia(f,v,t): move(f,v) move(v,t) def hanoi(n,f,h,t): if n == 0: pass else: hanoi(n-1, f, t, h) move(f,t) hanoi(n-1, h, f ,t) Her er en anden gennemgang af towers of hanoi.\n  Relateret  Recursion - wikipedia  "
},
{
	"uri": "https://getsrevel.github.io/tech/hugo/",
	"title": "Hugo Static Site Generator",
	"tags": [],
	"description": "",
	"content": " Kom igang med Hugo  Hugo Hugo Quickstart  Tilføj indhold Indholdet skrives ved hjælp af markdown, som bliver oversat til html.\n Markdown - John Gruber Markdown Markdown syntax explained Markdown usage with grav theme Hugo shortcodes  Diagrammer med Mermaid.js Læs dokumentation af mermaid.js for mange flere detaljer.\n\rHer er et eksempel på hvordan man kan lave et flowchart.\n{{\u0026lt; mermaid \u0026gt;}} graph TD; EDIT(\u0026quot;opret/rediger/slet fil(er)\u0026quot;) --\u0026gt; STAGE(\u0026quot;udvælg ændringer\u0026quot;) STAGE --\u0026gt; COMMIT(\u0026quot;Commit i lokalt depot\u0026quot;) COMMIT --\u0026gt; DO_PUSH{Klar til offentliggørelse?} DO_PUSH --\u0026gt;|Nej| EDIT DO_PUSH --\u0026gt;|Ja| PUSH(\u0026quot;Skub ændriger til 'remote'\u0026quot;) PUSH --\u0026gt; EDIT {{\u0026lt; / mermaid \u0026gt;}}  Resultatet kommer til at se således ud.\ngraph LR; EDIT(\"opret/rediger/slet fil(er)\") -- STAGE(\"udvælg ændringer\") STAGE -- COMMIT(\"Commit i lokalt depot\") COMMIT -- DO_PUSH{Klar til offentliggørelse?} DO_PUSH --|Nej| EDIT DO_PUSH --|Ja| PUSH(\"Skub ændriger til 'remote'\") PUSH -- EDIT \r"
},
{
	"uri": "https://getsrevel.github.io/tech/development-model/",
	"title": "Iterativ udvikling",
	"tags": [],
	"description": "",
	"content": "\rgraph LR; IDEA(\"Idé\") -- PLANNING((\"Planlægning\")) PLANNING -- IMPLEMENTATION((\"Udarbejdelse\")) IMPLEMENTATION -- TEST((Evaluering / Test)) TEST -- PLANNING TEST -- RELEASE(Frigivelse af færdigt system) \r"
},
{
	"uri": "https://getsrevel.github.io/tools/code-editor/",
	"title": "Code Editors and IDE&#39;s",
	"tags": [],
	"description": "",
	"content": " For at kunne arbejde med HTML, CSS, javascript og andre tekst filer har vi brug for en god editor.\nVisual Studio Code  Visual studio code (kan bruges både på Windows og Mac)  Jetbrains produkter Der er mulighed for at bruge en lang række udviklingsmiljøer fra JetBrains i gratis \u0026ldquo;studenter versioner\u0026rdquo;.\n https://www.jetbrains.com/student/  "
},
{
	"uri": "https://getsrevel.github.io/tech/node/",
	"title": "Node.js",
	"tags": [],
	"description": "",
	"content": " Node.js Lidt forskellige eksempler med Node.js.\n"
},
{
	"uri": "https://getsrevel.github.io/tech/p5js/",
	"title": "p5js",
	"tags": [],
	"description": "",
	"content": " P5js Lidt forskellige eksempler med p5.js.\n"
},
{
	"uri": "https://getsrevel.github.io/tech/",
	"title": "Tech",
	"tags": [],
	"description": "",
	"content": " Teknologi Her er en samling af forskellige teknologier vi arbejder med.\n"
},
{
	"uri": "https://getsrevel.github.io/project/",
	"title": "Project",
	"tags": [],
	"description": "",
	"content": " Projekter Her er en samling ideer til opgaver og software projekter.\n"
},
{
	"uri": "https://getsrevel.github.io/tools/",
	"title": "Tools",
	"tags": [],
	"description": "",
	"content": " Værktøj Her er en samling af software udviklingsværktøj.\n"
},
{
	"uri": "https://getsrevel.github.io/project/stickman/",
	"title": "Stickman",
	"tags": [],
	"description": "",
	"content": " Opgave: Lav en tændstikmand Opgaven går ud på at eksperimentere med computergrafik. Ved hjælp af p5js skal du lave et program der benytter forskellige tegne funktioner, til at generere en \u0026ldquo;tændstikmand\u0026rdquo;.\nHan skal som minimum bestå af:\n hoved mund øjne krop arme ben  Ekstra: til den \u0026ldquo;kvikke elev\u0026rdquo;; få din tændstikmand til at ændre udseende dynamisk f.eks. vha. museinput, knaptryk\n hovedets størrelse blinke med øjnene ændre farver  Vær kreativ :-)\nP5js introduktion  p5js p5 code editor browserbaseret editor der ikke kræver installation. Husk at oprette dig som bruger hvis du vil gemme dit arbejde, ellers forsvinder det når siden genindlæses. p5 reference er dokumentation af de mange funktioner i p5. Variabler i javascript bliver grundigt forklaret og bruger et metafor med en kasse, der måske kan hjælpe lidt på forståelsen. Variable scope forklaret ved et eksempel.  Tegn på skærmen Denne video forklarer de grundlæggende principper i computergrafik.\n   Dokumentation af alle tegne primitiver i p5.  Her nogle få udvalgte, der formentlig kan bruges til at løse opgaven.\n rect() line() ellipse() arc()  Her er nogle eksempler på hvordan de kan bruges i koden: en linie, et rektangel, en ellipse, et buestykke.\nline(x1, y1, x2, y2); rect(x, y, w, h); arc(x, y, w, h, start, stop);  Brug af farver Når du skal tegne kan du vælge egenskaber for din \u0026ldquo;pensel\u0026rdquo;. Dette gøres på inden du \u0026ldquo;maler\u0026rdquo;, på samme måde som med en rigtig pensel.\n stroke() vælger stregens farve. strokeWeight() vælger stregens tykkelse. fill() vælger fyldfarven. Denne har kun betydning for lukkede figurer som f.eks. firkanter og cirkler.  Du kan bruge color() til at oprette en farve, og gemme værdien i en variabel, så den nemt kan genbruges forskellige steder i programmet. Her er et eksempel:\nlet myColor = color(250, 142, 0) fill(myColor); circle(100, 150, 42);   Color Picker (google) kan bruges til at vælge en farve og se hvilke argumenter du skal give til color() funktionen. Color Picker - w3schools er en del af en længere forklaring om farver på hjemmesider og computergrafik.  "
},
{
	"uri": "https://getsrevel.github.io/tools/git/",
	"title": "Git Intro",
	"tags": [],
	"description": "",
	"content": " Git introduktion  Git and GitHub for Poets - tutorial (codingtrain)Klik for at redigere titlen\n Git installation vælg den der passer til dit operativ system. På mac er git sikkert allerede installeret. Bruger du linux, ved du formentlig selv hvordan du installerer pakker, der passer til din distribution.\n Git book\n About Version Control What is Git? Git in Visual Studio Code  How to use git in Visual Studio code\n  Basal Arbejdsgang graph TD; EDIT(\"opret/rediger/slet fil(er)\") -- STAGE(\"udvælg ændringer\") STAGE -- COMMIT(\"Commit i lokalt depot\") COMMIT -- DO_PUSH{Klar til offentliggørelse?} DO_PUSH --|Nej| EDIT DO_PUSH --|Ja| PUSH(\"Skub ændriger til 'remote'\") PUSH -- EDIT \r"
},
{
	"uri": "https://getsrevel.github.io/tech/javascript/",
	"title": "Javascript",
	"tags": [],
	"description": "",
	"content": " Introduktion  Variabler i javascript bliver grundigt forklaret og bruger et metafor med en kasse, der måske kan hjælpe lidt på forståelsen. JavaScript reference  Basic js demo Her er indholdet af my-script.js.\n// This file is included from the html file\r\rconsole.log(\u0026#34;Hej i konsollen\u0026#34;);\rfunction myFunction() {\rconsole.log(\u0026#34;AV!!!\u0026#34;);\r}\rfunction myOtherFunction(){\rconsole.log(\u0026#34;Hej med dig\u0026#34;);\r}\rfunction myThirdFunction(){\ralert(\u0026#34;Hvad har du gang i?\u0026#34;);\r}  Her er indholdet af index.html, så du kan se hvordan scriptet hentes ind i html siden, og funktionerne kan bindes til eventhandlere på de knapper der er indsat på siden.\n\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt;\r\u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;Demo html page\u0026lt;/h1\u0026gt;\r\u0026lt;p\u0026gt;\r\u0026lt;span\u0026gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Maiores, impedit repudiandae, magnam sint porro quidem eveniet at adipisci assumenda rerum, consequuntur eos eligendi nihil mollitia inventore perferendis possimus. Error, similique.\u0026lt;/span\u0026gt;\r\u0026lt;span\u0026gt;Laudantium, cumque architecto veritatis provident similique quia, ipsum aliquid mollitia beatae nam facilis unde quaerat autem tenetur neque natus doloremque incidunt, vel animi? Veniam eum odio ullam? Doloremque, possimus facere.\u0026lt;/span\u0026gt;\r\u0026lt;span\u0026gt;Ipsam, corporis dignissimos perferendis adipisci fuga saepe labore doloremque dolor exercitationem soluta? Neque illum quo cum aperiam, esse quae dicta labore earum porro sint asperiores harum officia eveniet vero! Facilis!\u0026lt;/span\u0026gt;\r\u0026lt;/p\u0026gt;\r\u0026lt;script src=\u0026#34;my-script.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r \u0026lt;button onclick=\u0026#34;myFunction()\u0026#34;\u0026gt;Klik her\u0026lt;/button\u0026gt;\r\u0026lt;button onclick=\u0026#34;myOtherFunction()\u0026#34;\u0026gt;... eller her\u0026lt;/button\u0026gt;\r\u0026lt;button onclick=\u0026#34;myThirdFunction()\u0026#34;\u0026gt;... eller hvad med her\u0026lt;/button\u0026gt;\r\r\u0026lt;p\u0026gt;\r\u0026lt;span\u0026gt;Lorem ipsum dolor sit, amet consectetur adipisicing elit. Molestiae placeat consectetur cum hic error aperiam distinctio repellat nulla, soluta voluptatibus. Voluptate vel ducimus sunt asperiores laboriosam, amet rerum sapiente sequi.\u0026lt;/span\u0026gt;\r\u0026lt;span\u0026gt;Suscipit dolorem voluptas ex iste, quaerat natus, corporis recusandae in assumenda labore eius! Amet, dignissimos laudantium? Sunt maiores quia ratione nihil hic fugit iusto aliquid autem? Facilis cumque vitae laborum.\u0026lt;/span\u0026gt;\r\u0026lt;span\u0026gt;Sequi maiores quia consequuntur quas, placeat sint ipsa fuga totam molestias est earum, odio alias, quo molestiae. Eaque, facere nesciunt, atque laboriosam accusantium non dicta minus iste consectetur, deserunt iusto?\u0026lt;/span\u0026gt;\r\u0026lt;span\u0026gt;Voluptas possimus corporis explicabo in neque illum accusantium quas! Exercitationem quae saepe deserunt magnam nihil sint aut in nam excepturi dolor nulla animi natus, nesciunt illo architecto obcaecati recusandae similique?\u0026lt;/span\u0026gt;\r\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt; Kørende eksempel Prøv det kørende eksempel.\n Plain js  "
},
{
	"uri": "https://getsrevel.github.io/example-drafts/",
	"title": "example-drafts",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tech/javascript/plain-js/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "\rDocument\r\r\rDemo html page\r\rLorem ipsum dolor sit amet consectetur adipisicing elit. Maiores, impedit repudiandae, magnam sint porro quidem eveniet at adipisci assumenda rerum, consequuntur eos eligendi nihil mollitia inventore perferendis possimus. Error, similique.\rLaudantium, cumque architecto veritatis provident similique quia, ipsum aliquid mollitia beatae nam facilis unde quaerat autem tenetur neque natus doloremque incidunt, vel animi? Veniam eum odio ullam? Doloremque, possimus facere.\rIpsam, corporis dignissimos perferendis adipisci fuga saepe labore doloremque dolor exercitationem soluta? Neque illum quo cum aperiam, esse quae dicta labore earum porro sint asperiores harum officia eveniet vero! Facilis!\r\rKlik her\r... eller her\r... eller hvad med her\r\rLorem ipsum dolor sit, amet consectetur adipisicing elit. Molestiae placeat consectetur cum hic error aperiam distinctio repellat nulla, soluta voluptatibus. Voluptate vel ducimus sunt asperiores laboriosam, amet rerum sapiente sequi.\rSuscipit dolorem voluptas ex iste, quaerat natus, corporis recusandae in assumenda labore eius! Amet, dignissimos laudantium? Sunt maiores quia ratione nihil hic fugit iusto aliquid autem? Facilis cumque vitae laborum.\rSequi maiores quia consequuntur quas, placeat sint ipsa fuga totam molestias est earum, odio alias, quo molestiae. Eaque, facere nesciunt, atque laboriosam accusantium non dicta minus iste consectetur, deserunt iusto?\rVoluptas possimus corporis explicabo in neque illum accusantium quas! Exercitationem quae saepe deserunt magnam nihil sint aut in nam excepturi dolor nulla animi natus, nesciunt illo architecto obcaecati recusandae similique?\r\r"
},
{
	"uri": "https://getsrevel.github.io/tech/javascript/strings/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "\rDocument\r\r\rDemo html page\r\r\r"
},
{
	"uri": "https://getsrevel.github.io/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/hold/",
	"title": "Hold",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://getsrevel.github.io/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]